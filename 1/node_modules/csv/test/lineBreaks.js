// Generated by CoffeeScript 1.4.0

/*
Test CSV - Copyright David Worms <open@adaltas.com> (BSD Licensed)
*/


(function() {
  var csv, fs, should;

  require('coffee-script');

  fs = require('fs');

  should = require('should');

  csv = process.env.CSV_COV ? require('../lib-cov/csv') : require('../src/csv');

  describe('lineBreaks', function() {
    it('Test line breaks custom', function(next) {
      return csv().from.path("" + __dirname + "/lineBreaks/lineBreaks.in").to.path("" + __dirname + "/lineBreaks/custom.tmp", {
        lineBreaks: '::'
      }).on('close', function(count) {
        var expect, result;
        count.should.eql(2);
        expect = fs.readFileSync("" + __dirname + "/lineBreaks/custom.out");
        result = fs.readFileSync("" + __dirname + "/lineBreaks/custom.tmp");
        result.should.eql(expect);
        return fs.unlink("" + __dirname + "/lineBreaks/custom.tmp", next);
      });
    });
    it('Test line breaks unix', function(next) {
      return csv().from.path("" + __dirname + "/lineBreaks/lineBreaks.in").to.path("" + __dirname + "/lineBreaks/unix.tmp", {
        lineBreaks: "unix"
      }).on('close', function(count) {
        var expect, result;
        count.should.eql(2);
        expect = fs.readFileSync("" + __dirname + "/lineBreaks/unix.out");
        result = fs.readFileSync("" + __dirname + "/lineBreaks/unix.tmp");
        result.should.eql(expect);
        return fs.unlink("" + __dirname + "/lineBreaks/unix.tmp", next);
      });
    });
    it('Test line breaks unicode', function(next) {
      return csv().from.path("" + __dirname + "/lineBreaks/lineBreaks.in").to.path("" + __dirname + "/lineBreaks/unicode.tmp", {
        lineBreaks: 'unicode'
      }).on('close', function(count) {
        var expect, result;
        count.should.eql(2);
        expect = fs.readFileSync("" + __dirname + "/lineBreaks/unicode.out");
        result = fs.readFileSync("" + __dirname + "/lineBreaks/unicode.tmp");
        result.should.eql(expect);
        return fs.unlink("" + __dirname + "/lineBreaks/unicode.tmp", next);
      });
    });
    it('Test line breaks mac', function(next) {
      return csv().from.path("" + __dirname + "/lineBreaks/lineBreaks.in").to.path("" + __dirname + "/lineBreaks/mac.tmp", {
        lineBreaks: 'mac'
      }).on('close', function(count) {
        var expect, result;
        count.should.eql(2);
        expect = fs.readFileSync("" + __dirname + "/lineBreaks/mac.out");
        result = fs.readFileSync("" + __dirname + "/lineBreaks/mac.tmp");
        result.should.eql(expect);
        return fs.unlink("" + __dirname + "/lineBreaks/mac.tmp", next);
      });
    });
    return it('Test line breaks windows', function(next) {
      return csv().from.path("" + __dirname + "/lineBreaks/lineBreaks.in").to.path("" + __dirname + "/lineBreaks/windows.tmp", {
        lineBreaks: 'windows'
      }).on('close', function(count) {
        var expect, result;
        count.should.eql(2);
        expect = fs.readFileSync("" + __dirname + "/lineBreaks/windows.out");
        result = fs.readFileSync("" + __dirname + "/lineBreaks/windows.tmp");
        result.should.eql(expect);
        return fs.unlink("" + __dirname + "/lineBreaks/windows.tmp", next);
      });
    });
  });

}).call(this);
