// Generated by CoffeeScript 1.4.0

/*
Test CSV - Copyright David Worms <open@adaltas.com> (BSD Licensed)
*/


(function() {
  var csv, fs, should;

  require('coffee-script');

  fs = require('fs');

  should = require('should');

  csv = process.env.CSV_COV ? require('../lib-cov/csv') : require('../src/csv');

  describe('header', function() {
    it('should print headers with defined write columns', function(next) {
      return csv().from.path("" + __dirname + "/header/defwcols.in").to.path("" + __dirname + "/header/defwcols.tmp", {
        header: true,
        columns: ["FIELD_1", "FIELD_2"]
      }).on('close', function(count) {
        var expect, result;
        count.should.eql(2);
        expect = fs.readFileSync("" + __dirname + "/header/defwcols.out");
        result = fs.readFileSync("" + __dirname + "/header/defwcols.tmp");
        result.should.eql(expect);
        fs.unlink("" + __dirname + "/header/defwcols.tmp");
        return next();
      });
    });
    return it('should print headers with true read columns and defined write columns', function(next) {
      return csv().from.path("" + __dirname + "/header/truercols_defwcols.in", {
        columns: true
      }).to.path("" + __dirname + "/header/truercols_defwcols.tmp", {
        header: true,
        columns: ["FIELD_1", "FIELD_2"]
      }).on('close', function(count) {
        var expect, result;
        count.should.eql(2);
        expect = fs.readFileSync("" + __dirname + "/header/truercols_defwcols.out");
        result = fs.readFileSync("" + __dirname + "/header/truercols_defwcols.tmp");
        result.should.eql(expect);
        fs.unlink("" + __dirname + "/header/truercols_defwcols.tmp");
        return next();
      });
    });
  });

}).call(this);
