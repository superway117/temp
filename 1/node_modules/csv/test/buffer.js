// Generated by CoffeeScript 1.4.0

/*
Test CSV - Copyright David Worms <open@adaltas.com> (BSD Licensed)
*/


(function() {
  var csv, fs, should;

  require('coffee-script');

  fs = require('fs');

  should = require('should');

  csv = process.env.CSV_COV ? require('../lib-cov/csv') : require('../src/csv');

  describe('buffer', function() {
    it('Buffer smaller than in', function(next) {
      return csv().from.path("" + __dirname + "/buffer/smaller.in", {
        bufferSize: 1024
      }).to.path("" + __dirname + "/buffer/smaller.tmp").transform(function(record) {
        record.should.be.a('object');
        return record;
      }).on('close', function() {
        var expect, result;
        expect = fs.readFileSync("" + __dirname + "/buffer/smaller.out");
        result = fs.readFileSync("" + __dirname + "/buffer/smaller.tmp");
        result.should.eql(expect);
        return fs.unlink("" + __dirname + "/buffer/smaller.tmp", next);
      });
    });
    return it('Buffer same as in', function(next) {
      return csv().from.path("" + __dirname + "/buffer/same.in", {
        bufferSize: 1024
      }).to.path("" + __dirname + "/buffer/same.tmp").transform(function(record) {
        record.should.be.a('object');
        return record;
      }).on('close', function() {
        var expect, result;
        expect = fs.readFileSync("" + __dirname + "/buffer/same.out");
        result = fs.readFileSync("" + __dirname + "/buffer/same.tmp");
        result.should.eql(expect);
        return fs.unlink("" + __dirname + "/buffer/same.tmp", next);
      });
    });
  });

}).call(this);
