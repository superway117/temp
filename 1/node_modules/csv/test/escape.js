// Generated by CoffeeScript 1.4.0

/*
Test CSV - Copyright David Worms <open@adaltas.com> (BSD Licensed)
*/


(function() {
  var csv, fs, should;

  require('coffee-script');

  fs = require('fs');

  should = require('should');

  csv = process.env.CSV_COV ? require('../lib-cov/csv') : require('../src/csv');

  describe('escape', function() {
    it('should honor the default double quote escape charactere', function(next) {
      return csv().from.path("" + __dirname + "/escape/default.in", {
        escape: '"'
      }).to.path("" + __dirname + "/escape/default.tmp").on('record', function(record, index) {
        if (index === 0) {
          record[1].should.eql('19"79.0');
          return record[3].should.eql('A"B"C');
        }
      }).on('close', function() {
        var expect, result;
        result = fs.readFileSync("" + __dirname + "/escape/default.out");
        expect = fs.readFileSync("" + __dirname + "/escape/default.tmp");
        result.should.eql(expect);
        return fs.unlink("" + __dirname + "/escape/default.tmp", next);
      });
    });
    return it('should honor the backslash escape charactere', function(next) {
      return csv().from.path("" + __dirname + "/escape/backslash.in", {
        escape: '\\'
      }).to.path("" + __dirname + "/escape/backslash.tmp").on('record', function(record, index) {
        if (index === 0) {
          record[1].should.eql('19"79.0');
          return record[3].should.eql('A"B"C');
        }
      }).on('close', function(count) {
        var expect, result;
        count.should.eql(2);
        expect = fs.readFileSync("" + __dirname + "/escape/backslash.out");
        result = fs.readFileSync("" + __dirname + "/escape/backslash.tmp");
        result.should.eql(expect);
        return fs.unlink("" + __dirname + "/escape/backslash.tmp", next);
      });
    });
  });

}).call(this);
