// Generated by CoffeeScript 1.4.0

/*
Test CSV - Copyright David Worms <open@adaltas.com> (BSD Licensed)
*/


(function() {
  var csv, fs, should;

  require('coffee-script');

  fs = require('fs');

  should = require('should');

  csv = process.env.CSV_COV ? require('../lib-cov/csv') : require('../src/csv');

  describe('delimiter', function() {
    it('Test empty value', function(next) {
      return csv().from.path("" + __dirname + "/delimiter/empty_value.in").to.path("" + __dirname + "/delimiter/empty_value.tmp").transform(function(record, index) {
        record.length.should.eql(5);
        if (index === 0) {
          record[1].should.eql('');
          record[4].should.eql('');
        } else if (index === 1) {
          record[0].should.eql('');
          record[3].should.eql('');
          record[4].should.eql('');
        }
        return record;
      }).on('close', function(count) {
        var expect, result;
        count.should.eql(2);
        expect = fs.readFileSync("" + __dirname + "/delimiter/empty_value.out");
        result = fs.readFileSync("" + __dirname + "/delimiter/empty_value.tmp");
        result.should.eql(expect);
        return fs.unlink("" + __dirname + "/delimiter/empty_value.tmp", next);
      });
    });
    return it('Test tabs to comma', function(next) {
      return csv().from.path("" + __dirname + "/delimiter/tab_to_coma.in", {
        delimiter: '\t'
      }).to.path("" + __dirname + "/delimiter/tab_to_coma.tmp", {
        delimiter: ','
      }).transform(function(record, index) {
        record.length.should.eql(5);
        if (index === 0) {
          record[1].should.eql('');
          record[4].should.eql('');
        } else if (index === 1) {
          record[0].should.eql('');
          record[3].should.eql('');
          record[4].should.eql('');
        }
        return record;
      }).on('close', function(count) {
        var expect, result;
        count.should.eql(2);
        expect = fs.readFileSync("" + __dirname + "/delimiter/tab_to_coma.out");
        result = fs.readFileSync("" + __dirname + "/delimiter/tab_to_coma.tmp");
        result.should.eql(expect);
        return fs.unlink("" + __dirname + "/delimiter/tab_to_coma.tmp", next);
      });
    });
  });

}).call(this);
